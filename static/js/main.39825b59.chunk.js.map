{"version":3,"sources":["components/Square.jsx","components/Board.jsx","sudokuService.js","storageService.js","components/SudokuSolver.jsx","App.jsx","index.js"],"names":["Square","id","value","disabled","style","onChange","FormControl","className","type","e","maxLength","Board","startGrid","grid","popover","squares","i","j","index","push","color","key","renderSquares","EMPTY_GRID","Array","fill","map","EMPTY_START_GRID","solvingProcess","examples","Math","floor","random","length","row","col","num","x","y","this","arr","slice","position","find","findEmpty","nums","isSafe","Number","solveRecursive","shift","KEY","board","localStorage","setItem","JSON","stringify","parse","getItem","SudokuSolver","useState","setGrid","setStartGrid","isGridDisabled","setIsGridDisabled","isShowProcessChecked","setIsShowProcessChecked","isSolved","setIsSolved","isSolving","setIsSolving","useEffect","storageBoard","storageService","getBoard","showProgress","progress","a","Promise","resolve","setTimeout","reset","setBoard","Row","Col","sm","target","split","newGrid","lg","Card","Body","Button","variant","onClick","randomGrid","sudokuService","getRandomExample","window","location","reload","solve","FormCheck","label","checked","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39825b59.chunk.js","sourcesContent":["import React from \"react\";\nimport { FormControl } from \"react-bootstrap\";\n\nfunction Square({ id, value, disabled, style, onChange }) {\n  return (\n    <FormControl\n      className=\"square\"\n      id={id}\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e, id)}\n      disabled={disabled}\n      maxLength=\"1\"\n      style={style}\n    />\n  );\n}\n\nexport default Square;\n","import React from \"react\";\nimport Square from \"./Square\";\n\nfunction Board({ startGrid, grid, onChange, disabled, popover }) {\n  const renderSquares = () => {\n    const squares = [];\n\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        const index = `${i},${j}`;\n        squares.push(\n          <Square\n            style={\n              startGrid[i][j] === 0 ? { color: \"red\" } : { color: \"black\" }\n            }\n            key={index}\n            id={index}\n            onChange={onChange}\n            value={grid[i][j] === 0 ? \"\" : grid[i][j]}\n            disabled={disabled}\n          />\n        );\n      }\n    }\n\n    return squares;\n  };\n\n  return <div className=\"sudoku-grid shadow\">{renderSquares()}</div>;\n}\n\nexport default Board;\n","export const EMPTY_GRID = () =>\n  new Array(9).fill(null).map(() => new Array(9).fill(0));\nexport const EMPTY_START_GRID = () =>\n  new Array(9).fill(null).map(() => new Array(9));\n\nclass SudokuService {\n  solvingProcess = [];\n\n  getRandomExample() {\n    const examples = [\n      [\n        [0, 0, 3, 0, 0, 0, 0, 0, 0],\n        [5, 8, 0, 2, 0, 0, 3, 0, 9],\n        [2, 0, 0, 4, 0, 5, 8, 7, 1],\n        [3, 7, 0, 0, 1, 0, 5, 9, 0],\n        [8, 0, 0, 7, 4, 0, 1, 3, 0],\n        [0, 2, 9, 0, 0, 8, 0, 0, 0],\n        [6, 0, 0, 1, 0, 3, 4, 0, 7],\n        [4, 0, 2, 0, 6, 0, 0, 0, 0],\n        [0, 0, 0, 5, 2, 4, 6, 8, 0],\n      ],\n      [\n        [4, 0, 0, 0, 5, 0, 0, 3, 2],\n        [0, 1, 0, 0, 9, 0, 7, 0, 5],\n        [7, 5, 3, 0, 0, 4, 1, 9, 6],\n        [0, 0, 1, 0, 7, 0, 0, 0, 0],\n        [6, 0, 9, 0, 0, 1, 2, 5, 0],\n        [0, 0, 0, 5, 0, 0, 6, 1, 3],\n        [3, 0, 4, 0, 0, 8, 0, 0, 1],\n        [0, 0, 0, 4, 0, 0, 0, 7, 8],\n        [0, 0, 0, 7, 6, 3, 0, 2, 9],\n      ],\n      [\n        [0, 0, 4, 2, 7, 6, 0, 3, 0],\n        [0, 5, 7, 1, 0, 0, 0, 4, 9],\n        [0, 0, 0, 9, 0, 0, 0, 0, 0],\n        [3, 0, 0, 0, 0, 0, 9, 6, 0],\n        [0, 0, 0, 0, 0, 7, 1, 8, 5],\n        [0, 0, 0, 0, 2, 0, 3, 0, 4],\n        [0, 0, 0, 7, 0, 1, 0, 9, 0],\n        [0, 0, 0, 6, 0, 0, 2, 1, 0],\n        [1, 0, 6, 0, 8, 0, 0, 0, 0],\n      ],\n    ];\n    return examples[Math.floor(Math.random() * examples.length)];\n  }\n\n  findEmpty(grid) {\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid[i].length; j++) {\n        if (grid[i][j] === 0) return { i, j };\n      }\n    }\n    return false;\n  }\n\n  isSafe(grid, row, col, num) {\n    for (let i = 0; i < grid.length; i++) {\n      if (grid[i][col] === num && i !== row) return false;\n      if (grid[row][i] === num && i !== col) return false;\n    }\n\n    const x = Math.floor(row / 3) * 3;\n    const y = Math.floor(col / 3) * 3;\n\n    for (let i = x; i < x + 3; i++) {\n      for (let j = y; j < y + 3; j++) {\n        if (grid[i][j] === num && i !== row && j !== col) return false;\n      }\n    }\n\n    return true;\n  }\n\n  solveRecursive(grid) {\n    this.solvingProcess.push(grid.map((arr) => arr.slice()));\n    const find = this.findEmpty(grid);\n    let position;\n    const nums = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n    if (find) {\n      position = find;\n    } else return true;\n\n    while (nums.length !== 0) {\n      const num = nums[0];\n\n      if (this.isSafe(grid, position.i, position.j, num)) {\n        grid[position.i][position.j] = Number(num);\n        if (this.solveRecursive(grid)) return true;\n        grid[position.i][position.j] = 0;\n      }\n      nums.shift();\n    }\n\n    return false;\n  }\n\n  solve(grid) {\n    this.solvingProcess = [];\n    this.solveRecursive(grid);\n    return this.solvingProcess;\n  }\n}\n\nexport default new SudokuService();\n","const KEY = \"sudoku-board\";\n\nclass StorageService {\n  setBoard(board) {\n    localStorage.setItem(KEY, JSON.stringify(board));\n  }\n\n  getBoard() {\n    return JSON.parse(localStorage.getItem(KEY));\n  }\n}\n\nexport default new StorageService();\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Button, FormCheck, Card } from \"react-bootstrap\";\nimport Board from \"./Board\";\nimport sudokuService, { EMPTY_GRID, EMPTY_START_GRID } from \"../sudokuService\";\nimport storageService from \"../storageService\";\n\nexport default function SudokuSolver() {\n  const [grid, setGrid] = useState(EMPTY_GRID);\n  const [startGrid, setStartGrid] = useState(EMPTY_START_GRID);\n  const [isGridDisabled, setIsGridDisabled] = useState(false);\n  const [isShowProcessChecked, setIsShowProcessChecked] = useState(true);\n  const [isSolved, setIsSolved] = useState(false);\n  const [isSolving, setIsSolving] = useState(false);\n  const progressSpeed = 5;\n\n  useEffect(() => {\n    const storageBoard = storageService.getBoard();\n    if (storageBoard) setGrid(storageBoard);\n  }, []);\n\n  const handleValueChange = (e, id) => {\n    const { value } = e.target;\n    if ((value <= 9 && value > 0) || value === \"\") {\n      const position = id.split(\",\");\n      const newGrid = grid.map((arr) => arr.slice());\n      if (value === \"\") newGrid[position[0]][position[1]] = 0;\n      else newGrid[position[0]][position[1]] = Number(value);\n      setGrid(newGrid);\n      storageService.setBoard(newGrid);\n    }\n  };\n\n  const showProgress = async (progress) => {\n    setIsGridDisabled(true);\n    for (const grid of progress) {\n      setGrid(grid);\n      await new Promise((resolve) => setTimeout(resolve, progressSpeed));\n    }\n    setIsSolved(true);\n    setIsSolving(false);\n  };\n\n  const handleSolveButtonClicked = () => {\n    setIsSolving(true);\n    setIsSolved(false);\n    setStartGrid(grid.map((arr) => arr.slice()));\n    const progress = sudokuService.solve(grid);\n    if (isShowProcessChecked) {\n      showProgress(progress);\n    } else {\n      setIsGridDisabled(true);\n      setGrid(progress[progress.length - 1]);\n      setIsSolved(true);\n      setIsSolving(false);\n    }\n  };\n\n  const reset = () => {\n    setGrid(EMPTY_GRID);\n    setStartGrid(EMPTY_START_GRID);\n    setIsGridDisabled(false);\n    setIsSolved(false);\n    storageService.setBoard(EMPTY_GRID());\n  };\n\n  const undo = () => {\n    setIsGridDisabled(false);\n    setGrid(startGrid);\n    setStartGrid(EMPTY_START_GRID);\n    setIsSolved(false);\n  };\n\n  return (\n    <Row className=\"mt-4\">\n      <Col sm={8} className=\"mb-5\">\n        <Board\n          startGrid={startGrid}\n          grid={grid}\n          onChange={handleValueChange}\n          disabled={isGridDisabled}\n        />\n      </Col>\n      <Col lg className=\"mb-5\">\n        <Card className=\"shadow\">\n          <Card.Body>\n            <Button\n              variant=\"dark\"\n              disabled={isSolving}\n              onClick={() => {\n                reset();\n                const randomGrid = sudokuService.getRandomExample();\n                setGrid(randomGrid);\n                storageService.setBoard(randomGrid);\n              }}\n            >\n              Example Board\n            </Button>\n            <br />\n            {isSolving ? (\n              <Button\n                className=\"mt-3\"\n                variant=\"dark\"\n                onClick={() => window.location.reload()}\n              >\n                Stop\n              </Button>\n            ) : (\n              <Button\n                className=\"mt-3\"\n                variant=\"dark\"\n                onClick={handleSolveButtonClicked}\n              >\n                Solve\n              </Button>\n            )}\n            <FormCheck\n              className=\"mt-3\"\n              type=\"checkbox\"\n              label=\"Show solving process\"\n              disabled={isSolving}\n              checked={isShowProcessChecked}\n              onChange={(e) => setIsShowProcessChecked(e.target.checked)}\n            />\n            {isShowProcessChecked ? (\n              <p className=\"mt-3 text-danger\">\n                If you show solving process on difficult sudoku puzzles it can\n                take very long time. Uncheck show solving process if you wanna\n                solve difficult puzzles.\n              </p>\n            ) : (\n              \"\"\n            )}\n            <Button\n              className=\"mt-3 mr-1\"\n              variant=\"dark\"\n              disabled={isSolving}\n              onClick={reset}\n            >\n              Clear\n            </Button>\n            <Button\n              className=\"mt-3 ml-1\"\n              variant=\"dark\"\n              disabled={!isSolved}\n              onClick={undo}\n            >\n              <i className=\"fas fa-undo\" />\n            </Button>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport SudokuSolver from \"./components/SudokuSolver\";\n\nfunction App() {\n  return (\n    <Container className=\"text-center\">\n      <h1 className=\"mt-3\">Sudoku Solver</h1>\n      <hr />\n      <SudokuSolver />\n    </Container>\n  );\n}\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}